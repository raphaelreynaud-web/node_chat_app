<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/reset.css">
    <link rel="stylesheet" href="/style.css">
    <title>WhatsApp Clone</title>
</head>
<body>
    <!-- Use the layout.ejs-->
    <%- include("sidebar")  %>
    <div class="content">
        <div class="message__header">
            <h3 id="message__header-name"></h3>
            <div class="message__header__buttons">
                <button id="addMember">
                    Add member
                </button>
                <button id="changeRoomName">
                    Change room name
                </button>
                <button id="leaveRoom">
                    Leave room
                </button>
            </div>
        </div>
        <div class="message__body">

        </div>
        <div class="message__input">
            <input id="inputRoom" type="text" placeholder="Type a message">
        </div>
        
    </div>
</body>
<script src="/socket.io/socket.io.js"></script>
<script>
    var roomId = "<%= roomId %>";
    var roomExist = true;

    fetch("http://localhost:3000/api/rooms/" + roomId, {
        method: "GET",
        headers: {
            "Content-Type": "application/json",
            "x-auth-token": localStorage.getItem("token")
        }
    })
    .then(res => {
        if (res.ok){
            return res.json();
        }
        else{
            window.location.href = "/";
            roomExist = false;
        }
    })
    .then(data => {
        document.querySelector("#message__header-name").innerText = data.name;
    })
    .catch(err => {
        console.log(err);
    })

    const messageBody = document.querySelector(".message__body");
    // create a div class message__item with a p tag inside with the text coucou
    function addMessage(text){
        const messageItem = document.createElement("div");
        messageItem.classList.add("message__item");
        const messageText = document.createElement("p");
        messageText.innerText = text;
        messageItem.appendChild(messageText);
        messageBody.appendChild(messageItem);
    }

    const socket = io();

    socket.emit('join', roomId);

    socket.on('message', (message) => {
        addMessage(message);
    });

    socket.on('roomChanged', (name) => {
        document.querySelector("#message__header-name").innerText = name;
    })

    const inputRoom = document.querySelector("#inputRoom");
    inputRoom.addEventListener("keyup", (e) => {
        if(e.key === "Enter"){
            socket.emit("roomMessage", roomId, e.target.value);
            e.target.value = "";
        }
    })

    const addMember = document.querySelector("#addMember");
    const changeRoomName = document.querySelector("#changeRoomName");
    const leaveRoom = document.querySelector("#leaveRoom");

    addMember.addEventListener("click", () => {
        fetch("http://localhost:3000/api/invites", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "x-auth-token": localStorage.getItem("token")
            },
            body: JSON.stringify({
                roomId: roomId,
            })
        }).then(res => res.json()).then(data => {
            console.log(data);
            alert(`Invite created : http://localhost:3000/api/invites/${data.inviteid}`)
        }).catch(err => {
            console.log(err);
        })
    })

    changeRoomName.addEventListener("click", () => {
        const name = prompt("Enter the new name of the room");
        fetch("http://localhost:3000/api/rooms/" + roomId, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "x-auth-token": localStorage.getItem("token")
            },
            body: JSON.stringify({
                name: name
            })
        })
        socket.emit("nameChanged", roomId, name);
    })

    leaveRoom.addEventListener("click", () => {
        fetch("http://localhost:3000/api/rooms/leave/" + roomId, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "x-auth-token": localStorage.getItem("token")
            }
        }).then(res => res.json()).then(data => {
            console.log(data);
        })
        .catch(err => {
            console.log(err);
        })
        window.location.href = "/";
    })
</script>
</html>
